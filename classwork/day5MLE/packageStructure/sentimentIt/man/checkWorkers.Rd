% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkWorkers.R
\name{checkWorkers}
\alias{checkWorkers}
\title{Detect outlying workers}
\usage{
checkWorkers(stan_fit, data, cut_point = 1, cut_proportion = 0.9,
  n.questions = 50, plot_hist = FALSE, hist_path = NULL)
}
\arguments{
\item{stan_fit}{A stan fit.}

\item{data}{The data used to fit stan.}

\item{cut_point}{A cutoff point to classify posterior coefficients. The proportion of posterior coefficients below \code{cut_point} is used to determine outliers. (Default is 1)}

\item{cut_proportion}{A cutoff proportion of posterior coefficients below \code{cut_point}. If the proportion of posterior coefficients below \code{cut_points} is higher than \code{cut_proportion}, a worker will be considered as an outlier provided that she answers more than the number of questions in \code{n.questions}. (Default is 0.9)}

\item{n.questions}{The number of questions to consider in order to determine suggested banned workers. (Default is 50)}

\item{plot_hist}{If TRUE, plot the histogram of workers with a rug plot. Default is FALSE}

\item{hist_path}{Save the histogram to path and file name specified. Default is NULL and no plot is saved.}
}
\value{
ban_workers A vector of outlying workers' IDs whose proportion of posterior coefficients below \code{cut_point} is greater than \code{cut_proportion} and who answered more than the number of questions in \code{n.questions}
}
\description{
Detect outlying workers
}
\details{
Before using this function, you must have created an Amazon Web Service and Mechanical Turk account. You
also must have created an account at SentimentIt.com. This function will not work otherwise. You also should
have run the readText() function to upload your data objects to the SentimentIt server. You should have also
run the createBatches() function and saved the batch ID numbers in your R workspace. You should have also
run the makeComps() function to save a portion of your total comparisons under each batch. You should have
also run the createTasks() function to send batches of paired data objects to Mechanical Turk for comparison.
You should have also run the readInData() function because this will give you the necessary data for the Stan
model. You should have also run either the fitStan() or fitStanHier() function to estimate the Stan model.

Once you have estimated a Stan model, you can use this to identify workers who are unreliable. You can use the 
output from the Stan model, as well as the output from the completed comparisons, to identify unreliable workers.
Use the `checkWorkers()` function to detect these outlying workers. This function returns a vector of IDs 
identifying workers who are unreliable. 

Reference Paper: Carlson, David and Jacob M. Montgomery. Forthcoming. “A Pairwise Comparison Framework for 
Fast, Flexible, and Reliable Human Coding of Political Texts.” American Political Science Review.
}
\examples{

\dontrun{
ban_workers <- checkWorkers(stan_fit = fit, data = output)
}

}
\seealso{
\code{\link{sentimentIt}} \code{\link{authenticate}} \code{\link{batchStatus}} \code{\link{checkCert}} \code{\link{createBatches}} \code{\link{createCert}} \code{\link{createPairwise}} \code{\link{createTasks}} \code{\link{fitStan}} \code{\link{fitStanHier}} \code{\link{makeComps}} \code{\link{readInData}} \code{\link{readText}} \code{\link{repostExpired}} \code{\link{reviews}} \code{\link{revokeCert}} \code{\link{signout}}
}
\author{
David Carlson
}
