% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitStanHier.R
\name{fitStanHier}
\alias{fitStanHier}
\title{Fit a Stan hierarchical model with results from SentimentIt}
\usage{
fitStanHier(email = NULL, password = NULL, data, hierarchy_data,
  hierarchy_var, chains = 3, iter = 2500, seed = 1234, n.cores = 3)
}
\arguments{
\item{email}{The researcher's email used for SentimentIt registration. Default is NULL and only needs to be provided if batch numbers are used instead of data.}

\item{password}{The researcher's password used for SentimentIt. Default is NULL and only needs to be provided if batch numbers are used instead of data.}

\item{data}{A data set or a vector of batch numbers.}

\item{hierarchy_data}{A file that contains the variable that is used as a hierarchy, with column ids filled with SentimentIt document IDs (created from \code{readText()}).}

\item{hierarchy_var}{A name of the variable in \code{hierarchy_data} that is used as a hierarchy.}

\item{chains}{The number of chains. (Default is 3)}

\item{iter}{The number of iteration. (Default is 2500)}

\item{seed}{Set seed. (Default is 1234)}

\item{n.cores}{Number of cores to be used in stan fit. (Default is 3)}
}
\value{
fit_hier A list containing the following elements:
\itemize{
\item fit The Stan fit object for the model
\item alphaPosts A matrix with the full posteriors of the lower-level estimates merged with the document IDs from the SentimentIt server
\item tPosts A matrix with the full posteriors of the higher-level estimates merged with the hierarchical identifier
}
}
\description{
Fit a Stan hierarchical model with results from SentimentIt
}
\details{
Before using this function, you must have created an Amazon Web Service and Mechanical Turk account. You
also must have created an account at SentimentIt.com. This function will not work otherwise. You also should
have run the readText() function to upload your data objects to the SentimentIt server. You should have also
run the createBatches() function and saved the batch ID numbers in your R workspace. You should have also
run the makeComps() function to save a portion of your total comparisons under each batch. You should have
also run the createTasks() function to send batches of paired data objects to Mechanical Turk for comparison.
You should have also run the readInData() function because this will give you the necessary data for the Stan
model.

Once you have sent batches of comparisons to Mechanical Turk and retrieved the results, you can estimate the 
reliability of the workers completing each task using a Stan model. For more information on Stan models, refer 
to page 7 of the following paper: \url{https://www.sentimentit.com/SentimentIt.pdf} (Carlson + Montgomery). 

You can fit either a non-hierarchical or a hierarchical Stan model. To estimate a non-hierarchical Stan model, 
use the `fitStan()` function. To estimate a hierarchical Stan model, use the `fitStanHier()` function.

Fit a multilevel random utility model using Hamiltonian MCMC in Stan with data retrieved from the SentimentIt platform.

The function will remove repeated documents from the hierarchical data, for example paragraphs that are
identical. To deal with repeated documents in order to include them in the hierarchical modeling, see
the replication materials for the Human Rights application found at:
\url{https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/0ZRGEE}

Reference Paper: Carlson, David and Jacob M. Montgomery. Forthcoming. “A Pairwise Comparison Framework for 
Fast, Flexible, and Reliable Human Coding of Political Texts.” American Political Science Review.
}
\examples{

\dontrun{
data(humanRightsOutput)
data(humanRightsDocs)
fit <- fitStanHier(data = humanRightsOutput, #can alternatively be batch IDs
         hierarchy_data = humanRightsDocs,
         hierarchy_var = 1, # can alternatively be a column name
          iter=8500) # this example requires more iterations
}


}
\seealso{
\code{\link{sentimentIt}} \code{\link{authenticate}} \code{\link{batchStatus}} \code{\link{checkCert}} \code{\link{checkWorkers}} \code{\link{createBatches}} \code{\link{createCert}} \code{\link{createPairwise}} \code{\link{createTasks}} \code{\link{fitStan}} \code{\link{makeComps}} \code{\link{readInData}} \code{\link{readText}} \code{\link{repostExpired}} \code{\link{reviews}} \code{\link{revokeCert}} \code{\link{signout}}
}
\author{
David Carlson
}
