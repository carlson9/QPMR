library(devtools)
library(roxygen2)
library(devtools)
library(roxygen2)
setwd('/home/david/QPMR/classwork/day5MLE/packageStructure/')
current.code <- as.package("LMPack")
load_all(current.code)
check(current.code)
setwd('~/QPMR/classwork/day5MLE/')
rm(list=ls())
setwd('~/QPMR/classwork/day5MLE/')
library(readstata13)
data = read.dta13('repdata.dta')
head(data)
data$sdonset
colnames(data)
data$war
#logit (most common)
mod1 = glm(war ~ Oil + empgdpenl + emplpopl + empolity2l,
data = data,
family = binomial)
summary(mod1)
#probit
mod2 = glm(war ~ Oil + empgdpenl + emplpopl + empolity2l,
data = data,
family = binomial(link = 'probit'))
summary(mod2)
#c-log-log (very uncommon)
mod3 = glm(war ~ Oil + empgdpenl + emplpopl + empolity2l,
data = data,
family = binomial(link = 'cloglog'))
summary(mod3)
colnames(data)
data$wars
unique(data$wars)
colnames(data)
#Poisson
mod4 = glm(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
family = poisson(link = 'log'))
summary(mod4)
#negative binomial (for overdispersed)
library(MASS)
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data)
warnings()
?glm.nb
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 100))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 10))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 50))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 5))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 500))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 500, epsilon = 1e-3))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 50, epsilon = 1e-3))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 50, epsilon = 1e-2))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 10, epsilon = 1e-2))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 10, epsilon = 1e-1))
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
control = glm.control(maxit = 20, epsilon = 1e-8))
warnings()
summary(mod5)
head(data)
data$colwars
unique(data$colwars)
head(data)
data$region
unique(data$region)
#lets predict region by ethnic frac
library(nnet)
colnames(data)
mod6 = multinom(region ~ ethfrac + gdptype,
data = data)
summary(mod6)
?multinom
#logistic multinomial
library(mnlogit)
#logistic multinomial
library(mnlogit)
#logistic multinomial
library(mlogit)
?mlogit
mod7 = mlogit(region ~ ethfrac + gdptype,
data = data)
mod7 = mlogit(region ~ 0 | ethfrac + gdptype,
data = data)
mod7 = mlogit(region ~ ethfrac + gdptype,
data = data)
mod7 = mlogit(region ~ ethfrac + gdptype,
data = data,
choice = 'region',
shape = 'wide')
mod7 = mlogit(region ~ ethfrac | gdptype,
data = data,
choice = 'region',
shape = 'wide')
mod7 = mlogit(region ~ ethfrac,
data = data,
choice = 'region',
shape = 'wide')
class(data$region)
mod7 = mlogit(as.factor(region) ~ ethfrac,
data = data,
choice = 'region',
shape = 'wide')
mod7 = mlogit(as.factor(region) ~ ethfrac,
data = data,
choice = 'as.factor(region)',
shape = 'wide')
mod7 = mlogit(as.factor(region) ~ ethfrac,
data = data,
choice = 'ch',
shape = 'wide')
data$reg = as.factor(data$region)
mod7 = mlogit(reg ~ ethfrac,
data = data,
choice = 'reg',
shape = 'wide')
mod7 = mlogit(reg ~ gdptype,
data = data,
choice = 'reg',
shape = 'wide')
mod7 = mlogit(reg ~ ethfrac + gdptype,
data = data,
choice = 'reg',
shape = 'long')
mod7 = mlogit(reg ~ 0 | ethfrac + gdptype,
data = data,
choice = 'reg',
shape = 'long')
mod7 = mlogit(reg ~ ethfrac | gdptype,
data = data,
choice = 'reg',
shape = 'long')
data[,1]
mod7 = mlogit(reg ~ ethfrac + gdptype,
data = data,
choice = 'reg',
shape = 'long',
alt.levels = c(1,3:7))
c(1,3:7)
unique(data$reg)
mod7 = mlogit(reg ~ ethfrac + gdptype,
data = data,
choice = 'reg',
shape = 'long',
alt.levels = c(0,2,3,5:7))
mod7 = mlogit(reg ~ ethfrac + gdptype,
data = data,
choice = 'reg',
shape = 'long',
alt.var = 'reg')
mod7 = mlogit(reg ~ ethfrac + gdptype,
data = data,
choice = 'reg',
shape = 'wide',
alt.var = 'reg')
summary(mlogit(mode ~ price + catch, data = Fish))
Fish <- mlogit.data(Fishing, varying = c(2:9), shape = "wide", choice = "mode")
data("Fishing", package = "mlogit")
Fish <- mlogit.data(Fishing, varying = c(2:9), shape = "wide", choice = "mode")
summary(mlogit(mode ~ price + catch, data = Fish))
?polr
colnames(data)
mod7 = polr(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data)
class(data$wars)
mod7 = polr(as.factor(wars) ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data)
summary(mod7)
colnames(data)
data$colonset
unique(data$colonset)
#binomial regression
#predict ethnic frac as a function of polity
glm(ethfrac ~ empolity2l,
data = data,
family = 'binomial')
#binomial regression
#predict ethnic frac as a function of polity
glm(ethfrac ~ empolity2l,
data = data,
family = quasibinomial)
#logit (most common)
mod1 = glm(war ~ Oil + empgdpenl + emplpopl + empolity2l,
data = data,
family = binomial(link = 'logit'))
summary(mod1)
exp(.48)
#probit
mod2 = glm(war ~ Oil + empgdpenl + emplpopl + empolity2l,
data = data,
family = binomial(link = 'probit'))
summary(mod2) #notice the different scale of the estimates
#c-log-log (very uncommon)
mod3 = glm(war ~ Oil + empgdpenl + emplpopl + empolity2l,
data = data,
family = binomial(link = 'cloglog'))
summary(mod3)
#Poisson
mod4 = glm(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data,
family = poisson(link = 'log'))
summary(mod4)
exp(.02)
table(data$wars)
#negative binomial (for overdispersed)
library(MASS)
mod5 = glm.nb(wars ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data)
summary(mod5) #notice the warnings
#logistic multinomial (using a neural net)
library(nnet)
mod6 = multinom(region ~ ethfrac + gdptype,
data = data)
summary(mod6)
?mlogit #this library is a huge pain, so I suggest fitting with nnet
mod7 = polr(as.factor(wars) ~ empolity2l + empgdpenl + emplpopl + ethfrac + relfrac,
data = data)
summary(mod7)
(-10:10)*.05
#quasibinomial regression for proportions
#predict ethnic frac as a function of polity
mod8 = glm(ethfrac ~ empolity2l,
data = data,
family = quasibinomial)
summary(mod8)
?lm
library(devtools)
library(roxygen2)
setwd('/home/david/QPMR/classwork/day5MLE/packageStructure/')
current.code <- as.package("LMPack")
load_all(current.code)
document(current.code)
rm(list=ls())
library(devtools)
library(roxygen2)
setwd('/home/david/QPMR/classwork/day5MLE/packageStructure/')
current.code <- as.package("LMPack")
load_all(current.code)
document(current.code)
